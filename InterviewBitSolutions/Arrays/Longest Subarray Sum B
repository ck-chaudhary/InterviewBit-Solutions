int Solution::solve(vector<int> &A, int k) {
    int n = A.size();
    unordered_map<int, int> um; 
    int sum = 0, maxLen = -1; 
  
    // traverse the given array 
    for (int i = 0; i < n; i++) { 
        sum += A[i]; 
        if (sum == k) 
            maxLen = i + 1; 
        if (um.find(sum) == um.end()) 
            um[sum] = i; 
        if (um.find(sum - k) != um.end()) { 
            if (maxLen < (i - um[sum - k])) 
                maxLen = i - um[sum - k]; 
        } 
    } 
    return maxLen;
}
