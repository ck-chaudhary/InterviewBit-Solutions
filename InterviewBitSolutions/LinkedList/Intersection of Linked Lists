/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::getIntersectionNode(ListNode* A, ListNode* B) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    if(!A)
    return B;
    if(!B)
    return A;
    stack<ListNode*> s1, s2;
    ListNode *newnode;
    newnode = A;
    while(newnode!=NULL){
        s1.push(newnode);
        newnode = newnode->next;
    }
    newnode = B;
    while(newnode!=NULL){
        s2.push(newnode);
        newnode = newnode->next;
    }
    ListNode *result = NULL;
    while(s1.top() == s2.top()){
        result = s1.top();
        s1.pop();s2.pop();
    }
    return result;
}
