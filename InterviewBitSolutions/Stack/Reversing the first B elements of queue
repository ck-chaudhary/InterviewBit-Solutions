vector<int> Solution::solve(vector<int> &A, int B) {
    vector<int> v;
    if (A.size() == 0 || B > A.size()) 
        return v; 
    if (B <= 0) 
        return v;
    queue<int> Queue;
    for(int i=0;i<A.size();i++){
        Queue.push(A[i]);
    }
    
    stack<int> Stack; 
  
    /* Push the first K elements into a Stack*/
    for (int i = 0; i < B; i++) { 
        Stack.push(Queue.front()); 
        Queue.pop(); 
    } 
  
    /* Enqueue the contents of stack 
       at the back of the queue*/
    while (!Stack.empty()) { 
        Queue.push(Stack.top()); 
        Stack.pop(); 
    } 
  
    /* Remove the remaining elements and  
       enqueue them at the end of the Queue*/
    for (int i = 0; i < Queue.size() - B; i++) { 
        Queue.push(Queue.front()); 
        Queue.pop(); 
    } 
    while (!Queue.empty()) { 
        v.push_back(Queue.front());
        Queue.pop(); 
    } 
    return v;
}
