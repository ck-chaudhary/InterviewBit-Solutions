int findMinLength(vector<string> &A, int n) 
{ 
    int min = A[0].length(); 
  
    for (int i=1; i<n; i++) 
        if (A[i].length() < min) 
            min = A[i].length(); 
  
    return(min); 
}
string Solution::longestCommonPrefix(vector<string> &A) {
    int n = A.size();
    int minlen = findMinLength(A, n); 
  
    string result; // Our resultant string 
    char current;  // The current character 
  
    for (int i=0; i<minlen; i++) 
    { 
        current = A[0][i]; 
  
        for (int j=1 ; j<n; j++) 
            if (A[j][i] != current) 
                return result; 
  
        // Append to result 
        result.push_back(current); 
    } 
  
    return (result); 
}
