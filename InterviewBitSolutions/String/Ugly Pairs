bool check(string s){
    bool ok = true;
    for(int i=0; i+1<s.size(); ++i)
        ok &= (abs(s[i] - s[i + 1]) != 1);
    return ok;
}

int solveit(string s){
    string odd = "", even = "";
        for(int i=0; i<s.size();++i){
            if (s[i] % 2 == 0)
                odd += s[i];
            else
                even += s[i];
        }
        sort(odd.begin(),odd.end());
        sort(even.begin(),even.end());
        if (check(odd + even))
            return 1;
        else if (check(even + odd))
            return 1;
        return 0;
}

int Solution::solve(string A) {
    return solveit(A);
}
/*
string Solution::longestCommonPrefix(vector<string> &A) {
}
*/
