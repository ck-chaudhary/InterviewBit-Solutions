vector<int> trav;
int cur;

void func(TreeNode *ptr)
{
    if(!ptr)
        return;
    func(ptr->left);
    trav.push_back(ptr->val);
    func(ptr->right);
}

BSTIterator::BSTIterator(TreeNode *root) 
{
    trav.clear();
    cur=0;
    func(root);
}

/** @return whether we have a next smallest number */
bool BSTIterator::hasNext() 
{
    //cout<<cur<<" "<<trav.size()<<endl;
    if(cur<trav.size())
        return true;
    else
        return false;
}

/** @return the next smallest number */
int BSTIterator::next() 
{
    //cout<<cur<<" ";
    if(cur<trav.size())
    {
        int tmp = trav[cur];
        cur++;
        return tmp;
    }
}
