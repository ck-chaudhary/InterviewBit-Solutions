/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int Solution::solve(TreeNode* A) {
    int odd_sum = 0, even_sum = 0, level=0;
    queue<TreeNode *> q;
    q.push(A);
    q.push(NULL);
    int k=0;
    while(!q.empty()){
        TreeNode* temp = q.front();q.pop();
        if(temp == NULL){
            level++;
            if(!q.empty())
            q.push(NULL);
        }
        else{
            if(level%2 == 0){
                even_sum += temp->val;
            }
            else{
                odd_sum += temp->val;
            }
            if(temp->left)
            q.push(temp->left);
            if(temp->right)
            q.push(temp->right);
        }
    }
    return (even_sum - odd_sum);
}
