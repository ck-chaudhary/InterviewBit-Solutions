 int fun(TreeNode* A)
 {
     if(A->left==NULL && A->right==NULL)
     return A->val;
     if(A->left!=NULL)
       A->val+=fun(A->left);
       if(A->right!=NULL)
       A->val+=fun(A->right);
      return A->val;  
 }
 int fun2(TreeNode* A , int sum)
 {   
    // cout<<A->val<<endl;
      if(A->val==sum)
      return 1;
     
     if(A->left==NULL && A->right==NULL)
     return 0;
     int t=0;
     if(A->left!=NULL)
       t+=fun2(A->left,sum);
       if(A->right!=NULL)
       t+=fun2(A->right,sum);
     if(t)
       return 1;
       else 
       return 0;
 }
int Solution::solve(TreeNode* A) {
    int sum=fun(A);
    if(sum%2==1)
    return 0;
    
    int t=0;
     if(A->left!=NULL)
       t+=fun2(A->left,sum/2);
       if(A->right!=NULL)
       t+=fun2(A->right,sum/2);
     if(t)
       return 1;
       else 
       return 0;
}
